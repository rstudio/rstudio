/*
 * ViewsSourceConstants.java
 *
 * Copyright (C) 2022 by Posit Software, PBC
 *
 * Unless you have received this program directly from Posit Software pursuant
 * to the terms of a commercial license agreement with Posit Software, then
 * this program is licensed to you under the terms of version 3 of the
 * GNU Affero General Public License. This program is distributed WITHOUT
 * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,
 * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the
 * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.
 *
 */
package org.rstudio.studio.client.workbench.views.source;

public interface ViewsSourceConstants extends com.google.gwt.i18n.client.Messages {
    String noDocumentsParentheses();
    String noOutlineAvailable();
    String title();
    String invalidApiName();
    String invalidApplicationName();
    String apiNameMustNotBeEmpty();
    String plumberAPIs();
    String createWithinDirectoryColon();
    String apiNameColon();
    String create();
    String applicationNameColon();
    String applicationTypeColon();
    String singleFileAppR();
    String multipleFileUiServerR();
    String shinyWebApplications();
    String applicationNameMustNotBeEmpty();
    String invalidApplicationNameCapitalized();
    String newQuatroProgressIndicator(String presentationType);
    String presentationCapitalized();
    String documentCapitalized();
    String errorCapitalized();
    String alwaysSaveFilesBeforeBuild();
    String show();
    String sourceDocumentError();
    String showProfiler();
    String rNotebook();
    String notebookCreationFailed();
    String rNotebookCreationFailedPackagesNotInstalled();
    String creatingStanScript();
    String creatingStanScriptPlural();
    String creatingNewDocument();
    String errorCreatingShinyApplication();
    String errorCreatingPlumberApi();
    String newShinyWebApplication();
    String newRPresentation();
    String creatingPresentation();
    String documentTabMoveFailed();
    String couldntMoveTabToWindowError(String errorMessage);
    String closeAll();
    String closeOther();
    String openFile();
    String newPlumberApi();
    String closeAllOthers();
    String errorCreatingNewDocument();
    String publishDocument();
    String publishPlumberApi();
    String publishApplication();
    // TODO IF THESE ARE SHORTCUTS NEED TO DOUBLE CHECK THESE
    String blameOnGithub(String name);
    String viewNameOnGithub(String name);
    String revertName(String name);
    String logOfName(String name);
    String diffName(String name);
    String noDocumentTabsOpen();
    String showObjectExplorer();
    String showDataFrame();
    String templateContentMissing();
    String templateAtPathMissing(String templatePath);
    String errorWhileOpeningFile();
    String openNotebookWarningMessage();
    String notebookOpenFailed();
    String notebookOpenFailedMessage(String errorMessage);
    String notebookCouldNotBeOpenedMessage(String errorMessage);
    String openingFile();
    String showFileTooLargeWarningMsg(String filename, String filelength, String sizeLimit);
    String selectedFileTooLarge();
    String confirmOpenLargeFileMsg(String filename, String length);
    String confirmOpen();
    String sourceColumn(int columnCounter);
    String source();
    String switchToTab();
    String rstudioSourceEditor();
    String closeSourceWindow();
    String cancel();
    String closeAndDiscardChanges();
    String unsavedChanges();
    String confirmCloseUnsavedDocuments();
    String yourEditsToFileHasNotBeenSaved(String desc);
    String yourEditsToFilePluralHasNotBeenSaved(String completeMessage);
    String commaListSeparator();
    String andForList();
    String cantMoveDoc();
    String cantMoveDocMessage(String errorMessage);
    String searchTabs();
    String codeEditorTab();
    String functionColon();
    String methodColon();
    String errorReadingFunctionDefinition();
    String codeBrowserDisplayed();
    String debugLocationIsApproximate();
    String rSourceViewer();
    String readOnlyParentheses();
    String codeBrowserSecond();
    String codeTools();
    String errorSearchingForFunction();
    String searchingForFunctionDefinition();
    String nameSourceViewer(String name);
    String untitledSourceViewer();
    String help();
    String dataBrowserDisplayed();
    String dataBrowser();
    String accessibleNameDataBrowser(String accessibleName);
    String untitledDataBrowser();
    String dataEditingTargetWidgetLabel1(String displayedObservations, String totalObservations);
    String dataEditingTargetWidgetLabel2(String omittedNumber);
    String accessibleNameObjectExplorer(String accessibleName);
    String untitledObjectExplorer();
    String objectExplorerDisplayed();
    String urlViewerDisplayed();
    String urlBrowser();
    String accessibleNameBrowser(String name);
    String untitledUrlBrowser();
    String sourceViewer();
    String name();
    String type();
    String value();
    String viewCode(String code);
    String noSelectionParentheses();
    String showAttributes();
    String searchObjects();
    String refresh();
    String sourceFileAtPathDoesNotExist(String selectedPath);
    String errorOpeningProfilerSource();
    String failedToSaveProfile();
    String saveFileName(String name);
    String failedToSaveProfileProperties();
    String codeProfileResultsDisplayed();
    String profileCapitalized();
    String profilerCapitalized();
    String rProfiler();
    String titleProfileView(String title);
    String failedToOpenProfile();
    String profilerError();
    String failedToStopProfiler();
    String errorNavigatingToFile();
    String noFileAtPath(String finalUrl);
    String openLinkMacCommand();
    String openLinkNotMacCommand();
    String findingDefinition();
    String ignored();
    String note();
    String warningLowercase();
    String error();
    String fatal();
    String noMatchesParentheses();
    String pagingLabelTextOf(int index, int textLength);
    String numberOfOccurrencesReplaced(int occurrences);
    String invalidSearchTerm();
    String noMoreOccurrences();
    String findCapitalized();
    String findOrReplace();
    String replaceCapitalized();
    String allCapitalized();
    String replaceAllOccurrences();
    String inSelection();
    String matchCase();
    String wholeWord();
    String regexCapitalized();
    String wrapCapitalized();
    String closeFindAndReplace();
    String chunkPendingExecution();
    String chunkPendingExecutionMessage();
    String okFullyCapitalized();
    String dontRun();
    String rMarkdownNotInstalledHTMLNoGenerate();
    String rMarkdownUpgradeRequired();
    String errorCreatingNotebookPrefix();
    String creatingRNotebooks();
    String cantExecuteJobDesc(String jobDesc);
    String executingPythonChunks();
    String executingChunks();
    String runChunk();
    String jobChunkCurrentlyExecuting(String jobDesc);
    String rStudioCannotExecuteJob(String jobDesc);
    String runChunks();
    String chunksCurrentlyRunning();
    String outputCantBeClearedBecauseChunks();
    String interruptAndClearOutput();
    String removeInlineChunkOutput();
    String clearExistingChunkOutputMessage();
    String removeOutput();
    String keepOutput();
    String unnamedChunk();
    String chunkNameColon();
    String outputColon();
    String showWarnings();
    String showMessages();
    String cacheChunk();
    String usePagedTables();
    String useCustomFigureSize();
    String widthInchesColon();
    String heightInchesColon();
    String enginePathColon();
    String selectEngine();
    String engineOptionsColon();
    String chunkOptions();
    String revertCapitalized();
    String applyCapitalized();
    String showNothingDontRunCode();
    String showNothingRunCode();
    String showCodeAndOutput();
    String showOutputOnly();
    String useDocumentDefaultParentheses();
    String defaultChunkOptions();
    String checkSpelling();
    String anErrorHasOccurredMessage(String eMessage);
    String spellCheckIsComplete();
    String spellCheckInProgress();
    String addCapitalized();
    String addWordToUserDictionary();
    String skip();
    String ignoreAll();
    String changeCapitalized();
    String changeAll();
    String suggestionsCapitalized();
    String checkingEllipses();
    String classCapitalized();
    String namespaceCapitalized();
    String lambdaCapitalized();
    String anonymousCapitalized();
    String functionCapitalized();
    String testCapitalized();
    String chunkCapitalized();
    String sectionCapitalized();
    String slideCapitalized();
    String tomorrowNight();
    String textmateDefaultParentheses();
    String specifiedThemeDoesNotExist();
    String specifiedDefaultThemeCannotBeRemoved();
    String chooseEncoding();
    String encodingsCapitalized();
    String showAllEncodings();
    String setAsDefaultEncodingSourceFiles();
    String sysEncNameDefault(String sysEncName);
    String askSquareBrackets();
    String newRDocumentationFile();
    String nameNotSpecified();
    String mustSpecifyTopicNameForRdFile();
    String newRMarkdown();
    String templatesCapitalized();
    String createEmptyDocument();
    String usingShinyWithRMarkdown();
    String shinyDocNameDescription();
    String shinyPresentationNameDescription();
    String fromTemplate();
    String shinyCapitalized();
    String shinyDocument();
    String shinyPresentation();
    String noParametersDefined();
    String noParametersDefinedForCurrentRMarkdown();
    String usingRMarkdownParameters();
    String unableToActivateVisualModeYAML();
    String unableToActivateVisualModeParsingCode();
    String unableToActivateVisualModeDocumentContains();
    String unrecognizedPandocTokens(String tokens);
    String invalidPandocFormat(String format);
    String unsupportedExtensionsForMarkdown(String format);
    String unableToParseMarkdownPleaseReport();
    String chunkSequence(int itemSequence);
    String topLevelParentheses();
    String cantEnterVisualModeUsingRealtime();
    String visualModeChunkSummary(String enging, int lines);
    String visualModeChunkSummaryPlural(String engine, int lines);
    String images();
    String xaringanPresentationsVisualMode();
    String versionControlConflict();
    String switchToVisualMode();
    String useVisualMode();
    String dontShowMessageAgain();
    String lineWrapping();
    String projectDefault();
    String globalDefault();
    String lineWrappingDiffersFromCurrent(String current);
    String selectHandleLineWrapping();
    String useBasedLineWrappingForDocument(String detectedLineWrappingForDocument);
    String useBasedLineWrappingForProject(String detectedLineWrappingForProject);
    String useDefaultLinewrapping(String projectConfigChoice);
    String project();
    String global();
    String learnAboutVisualModeLineWrapping();
    String wrapAtColumnColon();
    String collapseCapitalized();
    String expandCapitalized();
    String collapseOrExpandCodeChunk(String hintText);
    String editsStillBeingBackedUp();
    String processStillBeingUsedTextEditingTarget();
    String errorAutosavingFile();
    String rStudioUnableToAutosave();
    String couldNotSavePathPlusMessage(String path, String message);
    String errorSavingPathPlusMessage(String path, String message);
    String documentOutline();
    String moreButtonCell();
    String truncatedEllipses(String truncated);
    String documentUsesBasedLineWrapping(String detectedLineWrapping);
    String defaultNoLineWrapping(String current);
    String defaultConfiguredBasedLineWrapping(String current, String configuredLineWrapping);
    String createRNotebookText();
    String creatingShinyApplicationsText();
    String authoringRPresentationsText();
    String creatingRPlumberAPIText();
    String usingRNotebooksText();
    String theProfilerText();
    String couldNotResolveIssue(String issue);
    String unableToEditTitle();
    String unableToEditMessage();
}
