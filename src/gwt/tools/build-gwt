#!/usr/bin/env bash
set -e

# Update this when updating to a new base GWT release
GWT_VER=2.12.2
JAVA_VER=11

# This script is intended to run from the rstudio/gwt/tools folder
RUN_DIR=$(pwd)

GWT_DIR=${RUN_DIR}/../lib/gwt
INST_DIR=${GWT_DIR}/gwt-rstudio

if [ ! -d gwtproject ] || [ ! -d gwtproject/gwt ] || [ ! -d gwtproject/tools ]; then
    echo Error: gwt sources not found, use "sync-gwt" script to clone
    exit 1
fi

# set up Java compiler
command -v javac >/dev/null 2>&1 || { echo >&2 "javac required but not found: exiting."; exit 1; }

# help some platforms find java
if [ -n "${JAVA_HOME}" ]; then
    if [ "$(uname -sm)" = "Darwin arm64" ]; then
        export JAVA_HOME="/opt/homebrew/opt/openjdk@11/libexec/openjdk.jdk/Contents/Home"
        echo "Using JAVA_HOME=${JAVA_HOME}"
    fi
fi

if javac -version 2>&1 | grep -q "javac ${JAVA_VER}"; then
    javac -version
else
    echo Error: javac version ${JAVA_VER} required but not found
    echo Error: consider setting JAVA_HOME to a Java ${JAVA_VER} installation
    exit 1
fi

# Build GWT disto with custom version
cd "${RUN_DIR}/gwtproject/gwt"
ant clean dist -Dgwt.version="${GWT_VER}"

GWT_ZIP=${RUN_DIR}/gwtproject/gwt/build/dist/gwt-${GWT_VER}.zip
if [ ! -f "${GWT_ZIP}" ]; then
    echo Error: GWT build unsuccessful
    exit 1
fi

# Delete existing distro, extract new one
rm -rf "${INST_DIR}"
unzip -qd "${GWT_DIR}" "${GWT_ZIP}"
mv "${GWT_DIR}"/gwt-${GWT_VER} "${INST_DIR}"

# Delete javadoc, samples
rm -rf "${INST_DIR}"/doc/javadoc
find "${INST_DIR}"/samples/* -maxdepth 0 -not -name "build.xml" -type d -exec rm -rf {} \;

echo Success. GWT built and installed to "${INST_DIR}"
