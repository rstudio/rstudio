ARG ARCH=amd64
FROM --platform=linux/$ARCH amazonlinux:2
ARG ARCH

# Disable Quarto and Crashpad builds for AL2
ARG QUARTO_ENABLED=0
ARG RSTUDIO_CRASHPAD_ENABLED=0

ENV OPERATING_SYSTEM=centos_7

RUN set -x \
    && amazon-linux-extras install epel java-openjdk11 R4 -y

RUN yum install -y \
ant \
bzip2-devel \
curl \
clang \
expect \
fakeroot \
freetype-devel \
fuse-libs \
git \
gdb \
gpg \
gtk3 \
java-11-openjdk-devel \
jq \
libXScrnSaver-devel \
libXcursor-devel \
libXrandr-devel \
libacl-devel \
libcap-devel \
libcurl-devel \
libffi \
libjpeg-turbo-devel \
libpng-devel \
libtiff-devel \
libuser-devel \
libuuid-devel \
libxml2-devel \
lsof \
make \
mariadb-libs \
ninja-build \
openssl-devel \
p7zip \
p7zip-plugins \
pam-devel \
pango-devel \
patchelf \
postgresql-devel \
procps \
python3 \
rpmdevtools \
rpm-sign \
sqlite-devel \
sudo \
wget \
whois \
xml-commons-apis \
xorg-x11-server-Xvfb \
zlib-devel 

RUN yum groupinstall -y "Development Tools"

# for Centos 7 specific dependencies such as Quarto
ENV OS_DISTRO="centos7"

# sudo defaults to requiretty on centos7
RUN sed -i  's/Defaults    requiretty/Defaults !requiretty/' /etc/sudoers

# copy RStudio tools (needed so that our other dependency scripts can find it)
RUN mkdir -p /tools
COPY dependencies/tools/rstudio-tools.sh /tools/rstudio-tools.sh

RUN mkdir -p /opt/rstudio-tools/dependencies/tools
COPY dependencies/tools/rstudio-tools.sh /opt/rstudio-tools/dependencies/tools/rstudio-tools.sh

# run install-boost twice - boost exits 1 even though it has installed good enough for our uses.
# https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15
COPY dependencies/common/install-boost /tmp/
RUN bash /tmp/install-boost || bash /tmp/install-boost

# install cmake; do this with the system compiler by temporarily clearing CC/CXX since cmake
# can't find the devtoolset compiler in /opt/rh on this platform 
COPY package/linux/install-dependencies /tmp/
RUN /bin/bash /tmp/install-dependencies

# install crashpad and its dependencies
COPY dependencies/common/install-crashpad /tmp/
RUN /bin/bash /tmp/install-crashpad centos7

# copy common dependency installation scripts
RUN mkdir -p /opt/rstudio-tools/dependencies/common
COPY dependencies/common/ /opt/rstudio-tools/dependencies/common/

# panmirror check for changes
# ADD https://api.github.com/repos/quarto-dev/quarto/git/refs/heads/main panmirror.version.json
ADD https://api.github.com/repos/quarto-dev/quarto/git/refs/heads/release/rstudio-kousa-dogwood panmirror.version.json

# install common dependencies
RUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-common al2

# # panmirror needs to be able to build in this location
RUN chmod -R 777 /opt/rstudio-tools/src

# # cachebust for Quarto release
# ADD https://quarto.org/docs/download/_download.json quarto_releases
# RUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-quarto

# set github login from build argument if defined
ARG GITHUB_LOGIN
ENV RSTUDIO_GITHUB_LOGIN=$GITHUB_LOGIN

# Set Rust environment variables
ENV PATH="/opt/rstudio-tools/dependencies/common/overlay/rust/bin:${PATH}"
ENV CARGO_HOME="/opt/rstudio-tools/dependencies/common/overlay/rust"
ENV RUSTUP_HOME="/opt/rstudio-tools/dependencies/common/overlay/rust"
RUN if [ -d "/opt/rstudio-tools/dependencies/common/overlay/rust" ]; then \
    chmod -R 777 /opt/rstudio-tools/dependencies/common/overlay/rust \
    ; fi

# remove any previous users with conflicting IDs
ARG JENKINS_GID=999
ARG JENKINS_UID=999
COPY docker/jenkins/*.sh /tmp/
RUN /tmp/clean-uid.sh $JENKINS_UID && \
    /tmp/clean-gid.sh $JENKINS_GID

# create jenkins user, make sudo. try to keep this toward the bottom for less cache busting
RUN groupadd -g $JENKINS_GID jenkins && \
    useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins && \
    echo "jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
    