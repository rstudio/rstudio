ARG ARCH=amd64
FROM --platform=linux/$ARCH rockylinux:9
ARG ARCH

ENV OPERATING_SYSTEM=rockylinux_9

ARG AWS_REGION=us-east-1

RUN set -x \
      && yum install epel-release -y \
      && yum install dnf-plugins-core -y \ 
      && yum config-manager --set-enabled crb \
      && yum update -y

RUN dnf install -y \
    R \
    ant \
    autoconf \
    automake \
    boost-devel \
    bzip2-devel \
    clang-devel \
    curl-minimal \
    expect \
    fakeroot \
    freetype-devel \
    fuse-libs \
    gcc \
    gcc-c++ \
    gettext \
    git \
    gpg1 \
    gtk3 \
    java-17-openjdk \
    java-17-openjdk-devel \
    jq \
    libXScrnSaver-devel \
    libXcursor-devel \
    libXrandr-devel \
    libacl-devel \
    libcap-devel \ 
    libcurl-devel \
    libffi \
    libjpeg-turbo-devel \
    libpng-devel \
    libtiff-devel \
    libtool \
    libuuid-devel \
    llvm-devel \
    lsof \
    make \
    mesa-libGL-devel \
    ninja-build \
    openssl-devel \
    p7zip \
    p7zip-plugins \
    pam-devel \
    pango-devel \
    patchelf \
    postgresql-devel \
    procps \
    python3 \
    rpm-sign \
    rpmdevtools \
    sqlite-devel \
    sudo \
    valgrind \
    wget \
    whois \
    xml-commons-apis \
    xorg-x11-server-Xvfb \
    zlib-devel

# ensure we use the java 17 compiler to build GWT
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk

# copy RStudio tools (needed so that our other dependency scripts can find it)
RUN mkdir -p /tools
COPY dependencies/tools/rstudio-tools.sh /tools/rstudio-tools.sh

RUN mkdir -p /opt/rstudio-tools/dependencies/tools
COPY dependencies/tools/rstudio-tools.sh /opt/rstudio-tools/dependencies/tools/rstudio-tools.sh

# run install-boost twice - boost exits 1 even though it has installed good enough for our uses.
# https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15
COPY dependencies/common/install-boost /tmp/
RUN bash /tmp/install-boost || bash /tmp/install-boost

# install cmake
COPY package/linux/install-dependencies /tmp/
RUN bash /tmp/install-dependencies

# install crashpad and its dependencies
COPY dependencies/common/install-crashpad /tmp/
RUN bash /tmp/install-crashpad rhel8

# copy common dependency installation scripts
RUN mkdir -p /opt/rstudio-tools/dependencies/common
COPY dependencies/common/ /opt/rstudio-tools/dependencies/common/

# panmirror check for changes
ADD https://api.github.com/repos/quarto-dev/quarto/git/refs/heads/main panmirror.version.json
# ADD https://api.github.com/repos/quarto-dev/quarto/git/refs/heads/release/rstudio-cucumberleaf-sunflower panmirror.version.json

# install common dependencies
RUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-common rhel9
# panmirror needs to be able to build in this location
RUN chmod -R 777 /opt/rstudio-tools/src

# cachebust for Quarto release
ADD https://quarto.org/docs/download/_download.json quarto_releases
RUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-quarto

# set github login from build argument if defined
ARG GITHUB_LOGIN
ENV RSTUDIO_GITHUB_LOGIN=$GITHUB_LOGIN

# Set Rust environment variables
ENV PATH="/opt/rstudio-tools/dependencies/common/overlay/rust/bin:${PATH}"
ENV CARGO_HOME="/opt/rstudio-tools/dependencies/common/overlay/rust"
ENV RUSTUP_HOME="/opt/rstudio-tools/dependencies/common/overlay/rust"
RUN if [ -d "/opt/rstudio-tools/dependencies/common/overlay/rust" ]; then \
    chmod -R 777 /opt/rstudio-tools/dependencies/common/overlay/rust \
    ; fi

# remove any previous users with conflicting IDs
ARG JENKINS_GID=999
ARG JENKINS_UID=999
COPY docker/jenkins/*.sh /tmp/
RUN /tmp/clean-uid.sh $JENKINS_UID && \
    /tmp/clean-gid.sh $JENKINS_GID

# create jenkins user, make sudo. try to keep this toward the bottom for less cache busting
RUN groupadd -g $JENKINS_GID jenkins && \
    useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins && \
    echo "jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

RUN if [ -d "/src" ]; then git config --global --add safe.directory /src; fi
