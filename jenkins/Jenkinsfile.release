pipeline {
  agent none

  options {
    disableConcurrentBuilds()
    buildDiscarder(
      logRotator(
        artifactDaysToKeepStr: '',
        artifactNumToKeepStr: '',
        daysToKeepStr: '',
        numToKeepStr: '100'))
    rateLimitBuilds(throttle: [count: 2, durationName: 'hour', userBoost: true])
  }

  triggers {
    // The first Sunday of every month at 6am UTC or 1am EST
    cron '0 6 1-7 * 0'
  }
  
  parameters {
    booleanParam name: 'PUBLISH', defaultValue: true, description: 'Publish the build to S3.'
    booleanParam name: 'FORCE_BUILD_BINARIES', defaultValue: false, description: 'Force build binaries even if there are no changes, and even if they have already been built previously'
    booleanParam name: 'FORCE_BUILD_DOCKER', defaultValue: false, description: 'Force build docker images even if there are no dockerfile changes'
    string name: 'OS_FILTER', defaultValue: 'all', description: 'Pattern to limit builds by matching OS'
    string name: 'ARCH_FILTER', defaultValue: 'all', description: 'Pattern to limit builds by matching ARCH'
    string name: 'SLACK_CHANNEL', defaultValue: '#ide-builds', description: 'Slack channel to publish build message.', trim: true
  }
  
  stages {
    stage('Trigger Monthly Rebuild') {
      when { triggeredBy 'TimerTrigger' }

      steps {
        build wait: false,
              job: "IDE/${env.JOB_URL.contains('Pro') ? 'Pro' : 'OS'}-Builds/Builders/daily-build-pipeline/${env.BRANCH_NAME.replace('/', '%2F')}",
              parameters: [
                booleanParam(name: "DAILY", value: true),
                booleanParam(name: "PUBLISH", value: params.PUBLISH),
                booleanParam(name: "FORCE_BUILD_BINARIES", value: true),
                booleanParam(name: "FORCE_BUILD_DOCKER", value: params.FORCE_BUILD_DOCKER),
                string(name: "OS_FILTER", value: params.OS_FILTER),
                string(name: "ARCH_FILTER", value: params.ARCH_FILTER),
                string(name: "SLACK_CHANNEL", value: "${SLACK_CHANNEL}")
              ]
      }
    }

    stage('Trigger Daily Build') {
      when { not { triggeredBy 'TimerTrigger' } }

      steps {
        build wait: false,
              job: "IDE/${env.JOB_URL.contains('Pro') ? 'Pro' : 'OS'}-Builds/Builders/daily-build-pipeline/${env.BRANCH_NAME.replace('/', '%2F')}",
              parameters: [
                booleanParam(name: "DAILY", value: true),
                booleanParam(name: "PUBLISH", value: params.PUBLISH),
                booleanParam(name: "FORCE_BUILD_BINARIES", value: params.FORCE_BUILD_BINARIES),
                booleanParam(name: "FORCE_BUILD_DOCKER", value: params.FORCE_BUILD_DOCKER),
                string(name: "OS_FILTER", value: params.OS_FILTER),
                string(name: "ARCH_FILTER", value: params.ARCH_FILTER),
                string(name: "SLACK_CHANNEL", value: "${SLACK_CHANNEL}")
              ]
      }
    }
  }
}
